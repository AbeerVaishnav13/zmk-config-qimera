#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 50

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        lock_screen {
            bindings = <&kp K_POWER>;
            key-positions = <11 36>;
            timeout-ms = <250>;
            layers = <2>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <27 28>;
            layers = <0>;
        };

        semi {
            bindings = <&kp SEMI>;
            key-positions = <44 45>;
            layers = <0>;
        };

        semi_left_handed {
            bindings = <&kp SEMI>;
            key-positions = <38 39>;
            layers = <3>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp A &kp B &kp E &kp E &kp R &kp DOT &kp V &kp A &kp I &kp S &kp H &kp N &kp A &kp V &kp N1 &kp N3 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        work_email: work_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp A &kp B &kp E &kp E &kp R &kp V &kp AT &kp G &kp O &kp O &kp G &kp L &kp E &kp DOT &kp C &kp O &kp M>;
            label = "WORK_EMAIL";
        };

        ss_area: ss_area {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHIFT &kp NUMBER_4>,
                <&macro_release>,
                <&kp LGUI &kp LSHFT &kp N4>;

            label = "SS_AREA";
        };

        ss_util: ss_util {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LSHIFT &kp N5>,
                <&macro_release>,
                <&kp LGUI &kp LSHFT &kp N5>;

            label = "SS_UTIL";
        };
    };

    behaviors {
        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT>, <&caps_word>;

            tapping-term-ms = <200>;
        };

        kp_layer: kp_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_LAYER";
            bindings = <&kp>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        mo_to: mo_to {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TO";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&to>;
        };
    };

    &mmv { time-to-max-speed-ms = <150>; };

    &msc { time-to-max-speed-ms = <150>; };

    keymap {
        compatible = "zmk,keymap";

        home {
            bindings = <
&kp ESCAPE  &kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT                            &kp C_MUTE      &kp C_VOL_DN     &kp C_VOL_UP  &ss_area  &ss_util  &kp DEL
&kp GRAVE   &kp Q         &kp W         &kp E       &kp R             &kp T                                 &kp Y           &kp U            &kp I         &kp O     &kp P     &kp BSLH
&kp TAB     &mt LCTRL A   &mt LSHFT S   &mt LALT D  &mt LALT F        &mt LCTRL G                           &kp H           &kp J            &kp K         &kp L     &kp APOS  &kp BSPC
&kp BSPC    &kp Z         &kp X         &kp C       &kp V             &kp B                                 &kp N           &kp M            &kp COMMA     &kp DOT   &kp FSLH  &to 5
                                                    &shift_caps       &kp_layer LGUI 1  &mo 3  &lt 4 ENTER  &mt RALT SPACE  &mt RCTRL UNDER
            >;
        };

        num_sym {
            bindings = <
&to 0   &trans     &trans  &trans  &trans  &trans                                 &trans            &trans       &trans    &trans    &trans      &trans
&trans  &kp MINUS  &kp N1  &kp N2  &kp N3  &kp PLUS                               &kp AT            &kp LT       &kp LPAR  &kp RPAR  &kp GT      &trans
&trans  &kp DOT    &kp N4  &kp N5  &kp N6  &kp ASTRK                              &kp EXCL          &kp CARET    &kp LBRC  &kp RBRC  &kp DOLLAR  &trans
&trans  &kp FSLH   &kp N7  &kp N8  &kp N9  &kp EQUAL                              &kp HASH          &kp PERCENT  &kp LBKT  &kp RBKT  &kp AMPS    &trans
                                   &kp N0  &kp_layer LGUI 2  &lt 3 COMMA  &trans  &kp_layer RALT 0  &trans
            >;
        };

        nav {
            bindings = <
&to 0  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &email            &work_email     &none           &trans           &trans   &trans
&none  &none         &kp F1        &kp F2        &kp F3        &kp F10                           &none             &kp PG_UP       &kp UP_ARROW    &kp PG_DN        &none    &none
&none  &kp LCTRL     &mt LSHFT F4  &mt LALT F5   &mt LALT F6   &mt LCTRL F11                     &kp HOME          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END  &trans
&none  &none         &kp F7        &kp F8        &kp F9        &kp F12                           &none             &none           &none           &none            &none    &bt BT_CLR
                                                 &shift_caps   &kp_layer LGUI 1  &trans  &trans  &kp_layer RALT 0  &trans
            >;
        };

        left_handed {
            bindings = <
&kp DEL   &kp K_MUTE     &kp C_VOL_DN  &kp C_VOL_UP  &ss_area         &ss_util                       &none  &none  &none  &none  &none  &none
&kp BSLH  &kp P          &kp O         &kp I         &kp U            &kp Y                          &none  &none  &none  &none  &none  &none
&kp RET   &mt LGUI APOS  &kp L         &mt LSHFT K   &mt LSHFT J      &mt LGUI H                     &none  &none  &none  &none  &none  &none
&kp BSPC  &kp FSLH       &kp DOT       &kp COMMA     &kp M            &kp N                          &none  &none  &none  &none  &none  &none
                                                     &mt LCTRL UNDER  &mt LALT SPACE  &trans  &none  &none  &none
            >;
        };

        right_handed {
            bindings = <
&none  &none  &none  &none  &none  &none                 &kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_PP      &kp C_NEXT   &kp ESC
&none  &none  &none  &none  &none  &none                 &kp T         &kp R         &kp E       &kp W         &kp Q        &none
&none  &none  &none  &none  &none  &none                 &mt RCTRL G   &mt RALT F    &mt RGUI D  &mt RSHIFT S  &mt RCTRL A  &kp TAB
&none  &none  &none  &none  &none  &none                 &kp B         &kp V         &kp C       &kp X         &kp Z        &none
                            &none  &none  &none  &trans  &trans        &trans
            >;
        };

        mouse_move {
            bindings = <
&to 0  &none      &none           &none           &none            &none                             &none  &none           &none           &none            &none      &none
&none  &none      &mkp MB4        &mmv MOVE_UP    &mkp MB5         &none                             &none  &mkp MB4        &mmv MOVE_UP    &mkp MB5         &none      &none
&none  &mkp RCLK  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none                             &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp RCLK  &none
&none  &none      &kp LCTRL       &kp LALT        &kp LGUI         &none                             &none  &kp RGUI        &kp RALT        &kp RCTRL        &none      &none
                                                  &mkp MCLK        &mo_to 6 1  &mkp LCLK  &mkp LCLK  &mo 6  &mkp MCLK
            >;
        };

        mouse_scrl {
            bindings = <
&to 0  &none  &none            &none           &none           &none                &none  &none            &none           &none           &none  &none
&none  &none  &none            &msc SCRL_DOWN  &none           &none                &none  &none            &msc SCRL_DOWN  &none           &none  &none
&none  &none  &msc SCRL_RIGHT  &msc SCRL_UP    &msc SCRL_LEFT  &none                &none  &msc SCRL_RIGHT  &msc SCRL_UP    &msc SCRL_LEFT  &none  &none
&none  &none  &kp LCTRL        &kp LALT        &kp LGUI        &none                &none  &kp RGUI         &kp RALT        &kp RCTRL       &none  &none
                                               &none           &none  &none  &none  &none  &none
            >;
        };
    };
};
